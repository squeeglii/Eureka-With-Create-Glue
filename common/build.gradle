architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/vs_eureka.accesswidener")
}

dependencies {
    annotationProcessor(implementation("com.github.LlamaLad7:MixinExtras:0.1.1"))

    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    //modApi "me.shedaniel:architectury:${rootProject.architectury_version}"
    modApi("org.valkyrienskies:valkyrienskies-118-common:${rootProject.vs2_version}")

    compileOnly("org.valkyrienskies.core:api:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:api-game:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:util:${rootProject.vs_core_version}")
    compileOnly("org.valkyrienskies.core:impl:${rootProject.vs_core_version}")

    // Modification - Promoted Create Deps to Eureka from VS
    modCompileOnly("com.simibubi.create:create-fabric-${minecraft_version}:${create_fabric_version}")
            {
                exclude group: 'com.github.AlphaMode', module: 'fakeconfigtoml'
                transitive = false
            }
    modCompileOnly("com.jozufozu.flywheel:flywheel-fabric-${minecraft_version}:0.6.8-33")
    modCompileOnly("io.github.fabricators_of_create:Porting-Lib:${port_lib_version}+${minecraft_version}")

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.10"
    api "org.jetbrains.kotlin:kotlin-reflect:1.9.10"
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            groupId = "org.valkyrienskies.eureka"
            version = project.version
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        if (project.vs_maven_username && project.vs_maven_password) {
            println "Publishing to VS Maven"
            maven {
                url = project.vs_maven_url
                credentials {
                    username = project.vs_maven_username
                    password = project.vs_maven_password
                }
            }
        }
        // Add repositories to publish to here.
        if (System.getenv("GITHUB_ACTOR") != null) {
            println "Publishing to Github Packages"
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/ValkyrienSkies/Eureka")
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}